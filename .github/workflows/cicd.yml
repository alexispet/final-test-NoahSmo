---
name: learn-github-actions
run-name: ${{ github.actor }} is running CI/CD
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: adambirds/docker-compose-action@v1.3.0
        env:
          NODE_ENV: development
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_DATABASE: ${{ secrets.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        with:
          compose-file: "./docker-compose.yml"
          down-flags: "--volumes"
          services: |
            node
            mariadb
          test-container: node
          test-command: "npm run test"

  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Dependencies
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: develop
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm audit --audit-level=high

#  build-docker-dev:
#    needs: [tests]
#    runs-on: ubuntu-latest
#    if: github.ref_name == 'develop'
#    environment:
#      name: development
#      url: https://example.com
#    permissions:
#      contents: read
#      packages: write
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#      - name: login to ghcr.io (development)
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Extract metadata (tag,labels) for docker (development)
#        id: meta
#        uses: docker/metadata-action@v3
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api
#      - name: Build and push (development)
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#
#  build-docker-prod:
#    needs: [tests]
#    runs-on: ubuntu-latest
#    if: github.ref_name == 'main'
#    environment:
#      name: production
#      url: https://example.com
#    permissions:
#      contents: read
#      packages: write
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: login to ghcr.io
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Extract metadata (tag,labels) for docker
#        id: meta
#        uses: docker/metadata-action@v3
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: [tests]
    environment:
      name: production
      url: http://MON_IP:3000
    if: github.ref_name == 'main'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/alexispet/final-test-noahsmo:production

  deploy-development:
    runs-on: ubuntu-latest
    needs: [tests]
    environment:
      name: development
      url: http://MON_IP:3000
    if: github.ref_name == 'develop'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry (development)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push (development)
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/alexispet/final-test-noahsmo:development

  deploy-serv:
    needs: [ tests, dependency-audit, linter, deploy-development]
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
          sudo docker compose -f docker-compose.prod.yml up --pull always -d"
            


  # lighthouse:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Audit URLs using Lighthouse
  #       uses: treosh/lighthouse-ci-action@v10
  #       with:
  #         urls: |
  #           https://ec2-3-89-92-48.compute-1.amazonaws.com
  #         uploadArtifacts: true
  #         temporaryPublicStorage: true
